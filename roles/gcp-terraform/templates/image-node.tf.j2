{% set t_gcp_zone = gcp_zones[0] %}

terraform {
  backend "gcs" {
    bucket  = "{{ openshift_gcp_prefix }}terraform-state"
    prefix  = "image-node"
  }
}

provider "google" {
  project = "{{ openshift_gcp_project }}"
  region = "{{ openshift_gcp_region }}"
}

data "google_service_account" "{{ node_service_account }}" {
  account_id = "{{ node_service_account }}"
}

data "google_compute_subnetwork" "{{ cluster_subnetwork_name }}" {
  name = "{{ cluster_subnetwork_name }}"
  project = "{{ openshift_gcp_network_project }}"
}

resource "google_compute_instance" "{{ openshift_gcp_prefix }}image" {
  name = "{{ openshift_gcp_prefix }}image"
  machine_type = "{{ image_node_machine_type }}"
  zone = "{{ t_gcp_zone }}"

  tags = ["{{ openshift_gcp_prefix }}node"]

  boot_disk {
    initialize_params {
      image = "{{ image_node_boot_disk_image }}"
      size = "{{ image_node_boot_disk_size_gb }}"
      type = "{{ image_node_boot_disk_type }}"
    }
  }

  network_interface {
    subnetwork = "${data.google_compute_subnetwork.{{ cluster_subnetwork_name }}.self_link}"
    access_config {
      // Ephemeral IP
    }
  }

  labels = {
    openshift-cluster = "{{ cluster_name }}"
    openshift-node-group-name = "image"
  }

  metadata {
    ansible-host-group-nodes = "true"
    ansible-host-group-image = "true"
    ansible-var-openshift_schedulable = "false"
{% if cluster_ansible_ssh_pubkey %}
    sshKeys = "{{ cluster_ansible_user }}:{{ cluster_ansible_ssh_pubkey }} {{ cluster_ansible_user }}"
{% endif %}
  }

  service_account {
    email = "${data.google_service_account.{{ node_service_account }}.email}"
    scopes = ["cloud-platform"]
  }
}
