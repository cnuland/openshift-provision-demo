{% set instance_template_name =
         openshift_gcp_prefix ~
         node_group_name ~ '-' ~
         ansible_date_time.iso8601 | regex_replace('[^0-9]', '')
%}

terraform {
  backend "gcs" {
    bucket  = "{{ openshift_gcp_prefix }}terraform-state"
    prefix  = "node-{{ node_group_name }}"
  }
}

provider "google" {
  project = "{{ openshift_gcp_project }}"
  region = "{{ openshift_gcp_region }}"
}

data "google_service_account" "{{ node_service_account }}" {
  account_id = "{{ node_service_account }}"
}

data "google_compute_network" "{{ openshift_gcp_network_name }}" {
  name = "{{ openshift_gcp_network_name }}"
  project = "{{ openshift_gcp_network_project }}"
}

data "google_compute_subnetwork" "{{ cluster_subnetwork_name }}" {
  name = "{{ cluster_subnetwork_name }}"
  project = "{{ openshift_gcp_network_project }}"
}

data "google_compute_image" "node_image" {
  family = "{{ node_image_family }}"
}

resource "google_compute_instance_template" "{{ instance_template_name }}" {
  name = "{{ instance_template_name }}"
  description = "OpenShift {{ cluster_name }} {{ node_group_name }}"
  labels = {
    openshift-cluster = "{{ cluster_name }}"
    openshift-node-group-name = "{{ node_group_name }}"
  }
  machine_type = "{{ machine_type }}"
  tags = [
    "{{ openshift_gcp_prefix }}node",
    "{{ openshift_gcp_prefix }}node-{{ node_group_name }}"
  ]

  disk {
    boot = true
    disk_size_gb = {{ boot_disk_size_gb }}
    disk_type = "{{ boot_disk_type }}"
    source_image = "${data.google_compute_image.node_image.self_link}"
  }

  metadata {
    ansible-host-group-nodes = "true"
    ansible-host-group-{{ node_group_name }}-node = "true"
    openshift-node-group = "{{ node_group_name }}"

    kube-env = "AUTOSCALER_ENV_VARS: kube_reserved=cpu={{ kube_reserved_cpu }},memory={{ kube_reserved_memory }};node_labels={{ node_group.labels|op_map_to_pairs }};node_taints={{ node_group.taints|default({})|op_map_to_pairs }};\n"

{% if cluster_ansible_ssh_pubkey %}
    sshKeys = "{{ cluster_ansible_user }}:{{ cluster_ansible_ssh_pubkey }} {{ cluster_ansible_user }}"
{% endif %}
  }

  network_interface {
    subnetwork = "${data.google_compute_subnetwork.{{ cluster_subnetwork_name }}.self_link}"
    access_config {
      // Ephemeral IP
    }
  }

  scheduling {
{% if node_group.gcp_preemptible | default(false) | bool %}
    automatic_restart = false
    on_host_maintenance = "TERMINATE"
    preemptible = true
{% else %}
    automatic_restart = true
    on_host_maintenance = "MIGRATE"
    preemptible = false
{% endif %}
  }

  service_account {
    email = "${data.google_service_account.{{ node_service_account }}.email}"
    scopes = ["cloud-platform"]
  }
}

# FIXME - Allow zero scale instance groups
{% set gcp_zones = node_group.gcp_zones | default(gcp_zones) %}
{% set maximum_instance_count = node_group.maximum_instance_count | default(node_group.instance_count) %}
{% set managed_instance_group_count = maximum_instance_count if maximum_instance_count < gcp_zones|length else gcp_zones|length %}
{% for i in range(managed_instance_group_count) %}
{%   set gcp_zone = gcp_zones[i] %}
{%   set instance_group_name = openshift_gcp_prefix ~ node_group_name ~ gcp_zone[-2:] %}
resource "google_compute_instance_group_manager" "{{ instance_group_name }}" {
  name = "{{ instance_group_name }}"
  base_instance_name = "{{ instance_group_name }}"
  instance_template = "${google_compute_instance_template.{{ instance_template_name }}.self_link}"
  update_strategy = "NONE"
  zone = "{{ gcp_zone }}"
}
{% endfor %}
