{% set t_gcp_zone = gcp_zones[0] %}

terraform {
  backend "gcs" {
    bucket  = "{{ openshift_gcp_prefix }}terraform-state"
    prefix  = "controller"
  }
}

provider "google" {
  project = "{{ openshift_gcp_project }}"
  region = "{{ openshift_gcp_region }}"
}

data "google_compute_network" "{{ openshift_gcp_network_name }}" {
  name = "{{ cluster_subnetwork_name }}"
  project = "{{ openshift_gcp_network_project }}"
}

data "google_compute_subnetwork" "{{ cluster_subnetwork_name }}" {
  name = "{{ cluster_subnetwork_name }}"
  project = "{{ openshift_gcp_network_project }}"
}

resource "google_service_account" "{{ controller_service_account }}" {
  account_id = "{{ controller_service_account }}"
  display_name = "{{ cluster_name }} controller"
}

{% for iam_role in controller_iam_roles %}
resource "google_project_iam_member" "{{ controller_service_account }}-{{ iam_role | replace('.', '-') }}" {
  role = "roles/{{ iam_role }}"
  member = "serviceAccount:${google_service_account.{{ controller_service_account }}.email}"
}
{% endfor %}

resource "google_compute_firewall" "{{ openshift_gcp_prefix }}controller-to-node-ssh" {
  name = "{{ openshift_gcp_prefix }}controller-to-node-ssh"
  network = "${data.google_compute_network.{{ openshift_gcp_network_name }}.name}"

  allow {
    protocol = "tcp"
    ports = ["22"]
  }
  source_tags = ["{{ openshift_gcp_prefix }}controller"]
  target_tags = ["{{ openshift_gcp_prefix }}node"]
}

{% if management_source_ip_range %}
resource "google_compute_firewall" "{{ openshift_gcp_prefix }}mangement-to-controller-ssh" {
  name = "{{ openshift_gcp_prefix }}mangement-to-controller-ssh"
  network = "${data.google_compute_network.{{ openshift_gcp_network_name }}.name}"

  allow {
    protocol = "tcp"
    ports = [
{% if controller_ansible_port != 22 %}
      {{ controller_ansible_port }},
{% endif %}
      22
    ]
  }
  source_ranges = ["{{ management_source_ip_range }}"]
  target_tags = ["{{ openshift_gcp_prefix }}controller"]
}
{% endif %}

resource "google_compute_instance" "{{ openshift_gcp_prefix }}controller" {
  name = "{{ openshift_gcp_prefix }}controller"
  machine_type = "{{ controller_machine_type }}"
  zone = "{{ t_gcp_zone }}"

  tags = ["{{ openshift_gcp_prefix }}controller"]

  boot_disk {
    initialize_params {
      image = "{{ controller_boot_disk_image }}"
      size = "{{ controller_boot_disk_size_gb }}"
    }
  }

  network_interface {
    subnetwork = "${data.google_compute_subnetwork.{{ cluster_subnetwork_name }}.self_link}"
    access_config {
      // Ephemeral IP
    }
  }

  labels = {
    openshift-cluster = "{{ cluster_name }}"
    openshift-cluster-controller = "true"
  }

  metadata {
    ansible-host-group-controller = "true"
{% if controller_ansible_ssh_pubkey %}
    sshKeys = "{{ controller_ansible_user }}:{{ controller_ansible_ssh_pubkey }} {{ controller_ansible_user }}"
{% endif %}
{% if 22 != controller_ansible_port | default(22) %}
    startup-script = {{ lookup('template', 'ssh-tcp-redirect-startup.sh.j2') | to_json }}
{% endif %}
  }

  service_account {
    email = "${google_service_account.{{ controller_service_account }}.email}"
    scopes = ["cloud-platform"]
  }
}

data "google_dns_managed_zone" "{{ cluster_dns_zone_name }}" {
  name = "{{ cluster_dns_zone_name }}"
}

resource "google_dns_record_set" "{{ openshift_gcp_prefix }}controller" {
  name = "{{ controller_hostname }}."
  type = "A"
  ttl  = 300
  managed_zone = "${data.google_dns_managed_zone.{{ cluster_dns_zone_name }}.name}"
  rrdatas = ["${google_compute_instance.{{ openshift_gcp_prefix }}controller.network_interface.0.access_config.0.nat_ip}"]
}

output "controller_ip" {
  value = "${google_compute_instance.{{ openshift_gcp_prefix }}controller.network_interface.0.access_config.0.nat_ip}"
}
