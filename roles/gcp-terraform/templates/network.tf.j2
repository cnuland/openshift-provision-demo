#
# Network configuration
#

terraform {
  backend "gcs" {
    bucket  = "{{ openshift_gcp_prefix }}terraform-state"
    prefix  = "network"
  }
}

provider "google" {
  project = "{{ openshift_gcp_project }}"
  region = "{{ openshift_gcp_region }}"
}

# FIXME - Add support for when not creating network
{% if openshift_gcp_create_network | bool %}
resource "google_compute_network" "{{ openshift_gcp_network_name }}" {
  name = "{{ openshift_gcp_network_name }}"
  auto_create_subnetworks = false
}

resource "google_compute_subnetwork" "{{ cluster_subnetwork_name }}" {
  name = "{{ cluster_subnetwork_name }}"
  ip_cidr_range = "{{ cluster_subnetwork_ip_cidr_range }}"
  network = "${google_compute_network.{{ openshift_gcp_network_name }}.self_link}"
}

resource "google_compute_firewall" "{{ openshift_gcp_prefix }}master-etcd" {
  name = "{{ openshift_gcp_prefix }}master-etcd"
  network = "${google_compute_network.{{ openshift_gcp_network_name }}.name}"
  allow {
    protocol = "tcp"
    ports = ["2379", "2380"]
  }
  source_tags = ["{{ openshift_gcp_prefix }}node-master"]
  target_tags = ["{{ openshift_gcp_prefix }}node-master"]
}

resource "google_compute_firewall" "{{ openshift_gcp_prefix }}master-https" {
  name = "{{ openshift_gcp_prefix }}master-https"
  network = "${google_compute_network.{{ openshift_gcp_network_name }}.name}"
  allow {
    protocol = "tcp"
    ports = ["443"]
  }
  source_ranges = ["0.0.0.0/0"]
  target_tags = ["{{ openshift_gcp_prefix }}node-master"]
}

resource "google_compute_firewall" "{{ openshift_gcp_prefix }}master-skydns" {
  name = "{{ openshift_gcp_prefix }}master-skydns"
  network = "${google_compute_network.{{ openshift_gcp_network_name }}.name}"
  allow {
    protocol = "tcp"
    ports = ["8053"]
  }
  source_tags = ["{{ openshift_gcp_prefix }}node"]
  target_tags = ["{{ openshift_gcp_prefix }}node-master"]
}

resource "google_compute_firewall" "{{ openshift_gcp_prefix }}node-kublet" {
  name = "{{ openshift_gcp_prefix }}node-kublet"
  network = "${google_compute_network.{{ openshift_gcp_network_name }}.name}"
  allow {
    protocol = "tcp"
    ports = ["10250"]
  }
  source_tags = ["{{ openshift_gcp_prefix }}node-master"]
  target_tags = ["{{ openshift_gcp_prefix }}node"]
}

resource "google_compute_firewall" "{{ openshift_gcp_prefix }}node-kubeproxy" {
  name = "{{ openshift_gcp_prefix }}node-kubeproxy"
  network = "${google_compute_network.{{ openshift_gcp_network_name }}.name}"
  allow {
    protocol = "tcp"
    ports = ["10256"]
  }
  source_ranges = ["35.191.0.0/16", "130.211.0.0/22", "209.85.152.0/22", "209.85.204.0/22"]
  target_tags = ["{{ openshift_gcp_prefix }}node"]
}

resource "google_compute_firewall" "{{ openshift_gcp_prefix }}node-sdn" {
  name = "{{ openshift_gcp_prefix }}node-sdn"
  network = "${google_compute_network.{{ openshift_gcp_network_name }}.name}"
  allow {
    protocol = "udp"
    ports = ["4789"]
  }
  source_tags = ["{{ openshift_gcp_prefix }}node"]
  target_tags = ["{{ openshift_gcp_prefix }}node"]
}

{%   if management_source_ip_range and not use_controller %}
# Only setup direct ssh access to nodes from management subnet when
# management_source_ip_range is set and not using controller.
resource "google_compute_firewall" "{{ openshift_gcp_prefix }}mangement-to-node-ssh" {
  name = "{{ openshift_gcp_prefix }}mangement-to-node-ssh"
  network = "${google_compute_network.{{ openshift_gcp_network_name }}.name}"

  allow {
    protocol = "tcp"
    ports = ["22"]
  }
  source_ranges = ["{{ management_source_ip_range }}"]
  target_tags = ["{{ openshift_gcp_prefix }}node"]
}
{%   endif %}
{% endif %}

resource "google_compute_global_address" "{{ openshift_gcp_prefix }}master" {
  name = "{{ openshift_gcp_prefix }}master"
}

output "master_public_ip" {
  value = "${google_compute_global_address.{{ openshift_gcp_prefix }}master.address}"
}

resource "google_compute_global_address" "{{ openshift_gcp_prefix }}router" {
  name = "{{ openshift_gcp_prefix }}router"
}

output "router_public_ip" {
  value = "${google_compute_global_address.{{ openshift_gcp_prefix }}router.address}"
}

resource "google_dns_managed_zone" "{{ cluster_dns_zone_name }}" {
  name        = "{{ cluster_dns_zone_name }}"
  dns_name    = "{{ cluster_dns_domain }}."
  description = "{{ cluster_name }} managed by terraform"
}

output "cloud_dns_servers" {
  value = "${google_dns_managed_zone.{{ cluster_dns_zone_name }}.name_servers}"
}

{% if handle_dns_delegation %}
data "google_dns_managed_zone" "{{ delegation_dns_zone_name }}" {
  name = "{{ delegation_dns_zone_name }}"
}

resource "google_dns_record_set" "{{ openshift_gcp_prefix }}delegation" {
  name = "{{ cluster_dns_domain }}."
  type = "NS"
  ttl  = 300
  managed_zone = "${data.google_dns_managed_zone.{{ delegation_dns_zone_name }}.name}"
  rrdatas = ["${google_dns_managed_zone.{{ cluster_dns_zone_name }}.name_servers}"]
}
{% endif %}
