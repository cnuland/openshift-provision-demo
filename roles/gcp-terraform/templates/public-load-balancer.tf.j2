terraform {
  backend "gcs" {
    bucket  = "{{ openshift_provision_gcp_terraform_state_bucket }}"
    prefix  = "public-load-balancer"
  }
}

provider "google" {
  project = "{{ openshift_gcp_project }}"
  region = "{{ openshift_gcp_region }}"
}

data "google_compute_backend_service" "{{ openshift_gcp_prefix }}master-https" {
  name = "{{ openshift_gcp_prefix }}master-https"
}

data "google_compute_backend_service" "{{ openshift_gcp_prefix }}router-https" {
  name = "{{ openshift_gcp_prefix }}router-https"
}

data "google_compute_backend_service" "{{ openshift_gcp_prefix }}router-http" {
  name = "{{ openshift_gcp_prefix }}router-http"
}

{% if use_shared_public_load_balancer %}
data "google_compute_global_address" "{{ openshift_gcp_prefix }}public" {
  name = "{{ openshift_gcp_prefix }}public"
}

resource "google_compute_global_forwarding_rule" "{{ openshift_gcp_prefix }}public" {
  name = "{{ openshift_gcp_prefix }}public"
  ip_protocol = "TCP"
  ip_address = "${data.google_compute_global_address.{{ openshift_gcp_prefix }}public.address}"
  labels = {
    openshift-cluster = "{{ cluster_name }}"
  }
  port_range = "443"
  target = "${google_compute_target_https_proxy.{{ openshift_gcp_prefix }}public.self_link}"
}

resource "google_compute_target_https_proxy" "{{ openshift_gcp_prefix }}public" {
  name = "{{ openshift_gcp_prefix }}public"

  # Note - Currently GCP with terraform only supports a single master certificate.
  ssl_certificates = [
    "${google_compute_ssl_certificate.{{ openshift_gcp_prefix }}router.self_link}"
  ]
  url_map = "${google_compute_url_map.{{ openshift_gcp_prefix }}public.self_link}"
}

resource "google_compute_ssl_certificate" "{{ openshift_gcp_prefix }}router" {
  name = "{{ openshift_gcp_prefix }}router"
  certificate = {{ lookup('file', openshift_hosted_router_certificate.certfile) | to_json }}
  private_key = {{ lookup('file', openshift_hosted_router_certificate.keyfile) | to_json }}

  lifecycle {
    create_before_destroy = true
  }
}

resource "google_compute_url_map" "{{ openshift_gcp_prefix }}public" {
  name = "{{ openshift_gcp_prefix }}master"
  description = "Masters for {{ cluster_name }}"
  default_service = "${data.google_compute_backend_service.{{ openshift_gcp_prefix }}router-https.self_link}"

  host_rule {
    hosts = ["{{ openshift_master_cluster_public_hostname }}"]
    path_matcher = "master"
  }

  path_matcher {
    name = "master"
    default_service = "${data.google_compute_backend_service.{{ openshift_gcp_prefix }}master-https.self_link}"
  }
}

resource "google_compute_global_forwarding_rule" "{{ openshift_gcp_prefix }}router-http" {
  name = "{{ openshift_gcp_prefix }}router-http"
  ip_protocol = "TCP"
  ip_address = "${data.google_compute_global_address.{{ openshift_gcp_prefix }}public.address}"
  labels = {
    openshift-cluster = "{{ cluster_name }}"
  }
  port_range = "80"
  target = "${google_compute_target_http_proxy.{{ openshift_gcp_prefix }}router-http.self_link}"
}

resource "google_compute_target_http_proxy" "{{ openshift_gcp_prefix }}router-http" {
  name = "{{ openshift_gcp_prefix }}router-http"
  url_map = "${google_compute_url_map.{{ openshift_gcp_prefix }}router-http.self_link}"
}

resource "google_compute_url_map" "{{ openshift_gcp_prefix }}router-http" {
  name = "{{ openshift_gcp_prefix }}router-http"
  description = "Masters for {{ cluster_name }}"
  default_service = "${data.google_compute_backend_service.{{ openshift_gcp_prefix }}router-http.self_link}"
}

{%   if use_cloud_dns and not openshift_provision_wildcard_dns %}
data "google_dns_managed_zone" "{{ cluster_dns_zone_name }}" {
  name = "{{ cluster_dns_zone_name }}"
}

resource "google_dns_record_set" "{{ openshift_gcp_prefix }}master" {
  name = "{{ openshift_master_cluster_public_hostname }}."
  type = "A"
  ttl  = 300
  managed_zone = "${data.google_dns_managed_zone.{{ cluster_dns_zone_name }}.name}"
  rrdatas = ["${google_compute_global_forwarding_rule.{{ openshift_gcp_prefix }}public.ip_address}"]
}

resource "google_dns_record_set" "{{ openshift_gcp_prefix }}router" {
  name = "*.{{ openshift_master_default_subdomain }}."
  type = "A"
  ttl  = 300
  managed_zone = "${data.google_dns_managed_zone.{{ cluster_dns_zone_name }}.name}"
  rrdatas = ["${data.google_compute_global_address.{{ openshift_gcp_prefix }}public.address}"]
}
{%   endif %}
{% else %}
data "google_compute_global_address" "{{ openshift_gcp_prefix }}master" {
  name = "{{ openshift_gcp_prefix }}master"
}

resource "google_compute_global_forwarding_rule" "{{ openshift_gcp_prefix }}master" {
  name = "{{ openshift_gcp_prefix }}master"
  ip_protocol = "TCP"
  ip_address = "${data.google_compute_global_address.{{ openshift_gcp_prefix }}master.address}"
  labels = {
    openshift-cluster = "{{ cluster_name }}"
  }
  port_range = "443"
  target = "${google_compute_target_https_proxy.{{ openshift_gcp_prefix }}master.self_link}"
}

resource "google_compute_target_https_proxy" "{{ openshift_gcp_prefix }}master" {
  name = "{{ openshift_gcp_prefix }}master"
  ssl_certificates = [
    "${google_compute_ssl_certificate.{{ openshift_gcp_prefix }}master-0.self_link}"
  ]
  url_map = "${google_compute_url_map.{{ openshift_gcp_prefix }}master.self_link}"
}

resource "google_compute_ssl_certificate" "{{ openshift_gcp_prefix }}master-0" {
  name = "{{ openshift_gcp_prefix }}master"
  certificate = {{ lookup('file', openshift_master_named_certificates[0].certfile) | to_json }}
  private_key = {{ lookup('file', openshift_master_named_certificates[0].keyfile) | to_json }}

  lifecycle {
    create_before_destroy = true
  }
}

resource "google_compute_url_map" "{{ openshift_gcp_prefix }}master" {
  name = "{{ openshift_gcp_prefix }}master"
  description = "Masters for {{ cluster_name }}"
  default_service = "${data.google_compute_backend_service.{{ openshift_gcp_prefix }}master-https.self_link}"
}


resource "google_compute_ssl_certificate" "{{ openshift_gcp_prefix }}router" {
  name = "{{ openshift_gcp_prefix }}router"
  certificate = {{ lookup('file', openshift_hosted_router_certificate.certfile) | to_json }}
  private_key = {{ lookup('file', openshift_hosted_router_certificate.keyfile) | to_json }}

  lifecycle {
    create_before_destroy = true
  }
}

resource "google_compute_url_map" "{{ openshift_gcp_prefix }}router-http" {
  name = "{{ openshift_gcp_prefix }}router-http"
  description = "Router HTTP {{ cluster_name }}"
  default_service = "${data.google_compute_backend_service.{{ openshift_gcp_prefix }}router-http.self_link}"
}

resource "google_compute_url_map" "{{ openshift_gcp_prefix }}router-https" {
  name = "{{ openshift_gcp_prefix }}router-https"
  description = "Router HTTPS {{ cluster_name }}"
  default_service = "${google_compute_backend_service.{{ openshift_gcp_prefix }}router-https.self_link}"
}

resource "google_compute_target_http_proxy" "{{ openshift_gcp_prefix }}router-http" {
  name = "{{ openshift_gcp_prefix }}router-http"
  url_map = "${google_compute_url_map.{{ openshift_gcp_prefix }}router-http.self_link}"
}

resource "google_compute_target_https_proxy" "{{ openshift_gcp_prefix }}router-https" {
  name = "{{ openshift_gcp_prefix }}router-https"
  ssl_certificates = ["${google_compute_ssl_certificate.{{ openshift_gcp_prefix }}router.self_link}"]
  url_map = "${google_compute_url_map.{{ openshift_gcp_prefix }}router-https.self_link}"
}

data "google_compute_global_address" "{{ openshift_gcp_prefix }}router" {
  name = "{{ openshift_gcp_prefix }}router"
}

resource "google_compute_global_forwarding_rule" "{{ openshift_gcp_prefix }}router-http" {
  name = "{{ openshift_gcp_prefix }}router-http"
  ip_protocol = "TCP"
  ip_address = "${data.google_compute_global_address.{{ openshift_gcp_prefix }}router.address}"
  labels = {
    openshift-cluster = "{{ cluster_name }}"
  }
  port_range = "80"
  target = "${google_compute_target_http_proxy.{{ openshift_gcp_prefix }}router-http.self_link}"
}

resource "google_compute_global_forwarding_rule" "{{ openshift_gcp_prefix }}router-https" {
  name = "{{ openshift_gcp_prefix }}router-https"
  ip_protocol = "TCP"
  ip_address = "${data.google_compute_global_address.{{ openshift_gcp_prefix }}router.address}"
  labels = {
    openshift-cluster = "{{ cluster_name }}"
  }
  port_range = "443"
  target = "${google_compute_target_https_proxy.{{ openshift_gcp_prefix }}router-https.self_link}"
}

{%   if use_cloud_dns and not openshift_provision_wildcard_dns %}
data "google_dns_managed_zone" "{{ cluster_dns_zone_name }}" {
  name = "{{ cluster_dns_zone_name }}"
}

resource "google_dns_record_set" "{{ openshift_gcp_prefix }}master" {
  name = "{{ openshift_master_cluster_public_hostname }}."
  type = "A"
  ttl  = 300
  managed_zone = "${data.google_dns_managed_zone.{{ cluster_dns_zone_name }}.name}"
  rrdatas = ["${google_compute_global_forwarding_rule.{{ openshift_gcp_prefix }}master.ip_address}"]
}

resource "google_dns_record_set" "{{ openshift_gcp_prefix }}router" {
  name = "*.{{ openshift_master_default_subdomain }}."
  type = "A"
  ttl  = 300
  managed_zone = "${data.google_dns_managed_zone.{{ cluster_dns_zone_name }}.name}"
  rrdatas = ["${data.google_compute_global_address.{{ openshift_gcp_prefix }}router.address}"]
}
{%   endif %}
{% endif %}
